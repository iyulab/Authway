import React, { useState } from 'react'
import { useNavigate } from 'react-router-dom'
import { useForm } from 'react-hook-form'
import { zodResolver } from '@hookform/resolvers/zod'
import { z } from 'zod'
import { useAuthStore } from '../stores/auth'
import { authApi, LoginRequest } from '../lib/api'\n\n// Validation schema\nconst loginSchema = z.object({\n  email: z.string().email('올바른 이메일을 입력해주세요'),\n  password: z.string().min(1, '비밀번호를 입력해주세요'),\n})\n\ntype LoginFormData = z.infer<typeof loginSchema>\n\nconst LoginPage: React.FC = () => {\n  const navigate = useNavigate()\n  const login = useAuthStore((state) => state.login)\n  const [error, setError] = useState<string | null>(null)\n  const [isLoading, setIsLoading] = useState(false)\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<LoginFormData>({\n    resolver: zodResolver(loginSchema),\n  })\n\n  const onSubmit = async (data: LoginFormData) => {\n    setIsLoading(true)\n    setError(null)\n\n    try {\n      const response = await authApi.login(data as LoginRequest)\n      const { user, tokens } = response.data\n      \n      // Store token and user info\n      login(user, tokens.access_token)\n      \n      // Redirect to dashboard\n      navigate('/dashboard')\n    } catch (err: any) {\n      console.error('Login error:', err)\n      setError(err.response?.data?.error || '로그인에 실패했습니다.')\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-md w-full space-y-8\">\n        <div>\n          <div className=\"mx-auto h-12 w-12 flex items-center justify-center rounded-full bg-indigo-100\">\n            <svg\n              className=\"h-6 w-6 text-indigo-600\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\"\n              />\n            </svg>\n          </div>\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\n            Authway 관리자 로그인\n          </h2>\n          <p className=\"mt-2 text-center text-sm text-gray-600\">\n            관리자 계정으로 로그인하세요\n          </p>\n        </div>\n\n        <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit(onSubmit)}>\n          {error && (\n            <div className=\"rounded-md bg-red-50 p-4\">\n              <div className=\"text-sm text-red-700\">{error}</div>\n            </div>\n          )}\n\n          <div className=\"space-y-4\">\n            <div>\n              <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n                이메일\n              </label>\n              <input\n                {...register('email')}\n                type=\"email\"\n                autoComplete=\"email\"\n                className=\"mt-1 appearance-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                placeholder=\"이메일을 입력하세요\"\n              />\n              {errors.email && (\n                <p className=\"mt-1 text-sm text-red-600\">{errors.email.message}</p>\n              )}\n            </div>\n\n            <div>\n              <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\n                비밀번호\n              </label>\n              <input\n                {...register('password')}\n                type=\"password\"\n                autoComplete=\"current-password\"\n                className=\"mt-1 appearance-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                placeholder=\"비밀번호를 입력하세요\"\n              />\n              {errors.password && (\n                <p className=\"mt-1 text-sm text-red-600\">{errors.password.message}</p>\n              )}\n            </div>\n          </div>\n\n          <div>\n            <button\n              type=\"submit\"\n              disabled={isLoading}\n              className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              {isLoading ? (\n                <div className=\"flex items-center\">\n                  <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n                  로그인 중...\n                </div>\n              ) : (\n                '로그인'\n              )}\n            </button>\n          </div>\n\n          <div className=\"text-center\">\n            <p className=\"text-sm text-gray-600\">\n              일반 사용자이신가요?{' '}\n              <a\n                href=\"http://localhost:3001/login\"\n                className=\"text-indigo-600 hover:text-indigo-500\"\n              >\n                사용자 로그인 페이지\n              </a>\n            </p>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default LoginPage